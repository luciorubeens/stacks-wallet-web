name: PR Extensions builds
on: [pull_request, workflow_dispatch]

env:
  SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
  SEGMENT_WRITE_KEY: ${{ secrets.SEGMENT_WRITE_KEY_STAGING }}
  WALLET_ENVIRONMENT: feature
  X_API_KEY: ${{ secrets.X_API_KEY }}

jobs:
  pre_run:
    runs-on: ubuntu-latest
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@ad6cb1b847ffb509a69b745b6ee2f1d14dfe14b8
        with:
          access_token: ${{ github.token }}

  update-pull-request-body:
    name: Add links to built extensions
    runs-on: ubuntu-latest
    needs:
      - pre_run
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.ref }}

      - uses: kyranjamie/pull-request-fixed-header@v1.0.1
        # Don't run on forks
        if: github.event.pull_request.head.repo.full_name == github.repository
        with:
          header: '> Try out this version of the Hiro Wallet - download [extension builds](https://github.com/hirosystems/stacks-wallet-web/actions/runs/${{ github.run_id }}).'
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build_chrome_extension:
    name: Build Chrome extension
    runs-on: ubuntu-latest
    needs:
      - pre_run
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: actions/cache@v2
        id: cache-node-modules
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('**/package.json') }}

      - uses: actions/setup-node@v2
        with:
          node-version: 14.x

      - name: Install packages
        uses: ./.github/actions/provision
        if: steps.cache-node-modules.outputs.cache-hit != 'true'

      - name: Build project
        run: yarn build

      - name: Build extension
        run: sh build-ext.sh

      - uses: actions/upload-artifact@v2
        name: Upload Chrome Extension Zip
        with:
          name: stacks-wallet-chromium
          path: stacks-wallet-chromium.zip

  publish_firefox_beta:
    name: Publish beta firefox extension
    runs-on: ubuntu-latest
    needs:
      - pre_run
    env:
      MINIFY_PRODUCTION_BUILD: true
    # only run on commits with message 'Version release' because this will often fail on PRs
    # due to reasons out of our control in the Firefox submission process
    if: github.event.pull_request.head.repo.full_name == github.repository && github.event.commits[0].message == 'Version release'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Set Node Version
        uses: actions/setup-node@v2-beta
        with:
          node-version: 14.x

      - name: Restore cache
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}

      - name: Install yarn dependencies
        run: PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD=1 yarn --frozen-lockfile

      - name: Build project
        run: yarn build

      - name: Build extension
        run: sh build-ext.sh

      - name: Sign Firefox extension
        run: yarn web-ext sign --channel=unlisted
        env:
          WEB_EXT_API_KEY: ${{ secrets.WEB_EXT_API_KEY }}
          WEB_EXT_API_SECRET: ${{ secrets.WEB_EXT_API_SECRET }}

      - uses: actions/upload-artifact@v2
        name: Upload Firefox Add-On XPI
        with:
          name: connect-addon
          path: web-ext-artifacts/*.xpi
